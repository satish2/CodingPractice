#include <stdio.h>

int main() {
	
	mergesort(A,0, n-1);

}

void mergesort(int *A, int startPos, int endPos) {
	
	int mid = (startPos + endPos)/2;
	mergesort(A,startPos, mid);
	mergesort(A,mid+1,endPos);
	merge(A,startPos,mid,endPos);
}

void merge (int *A, int startpos, int mid, int endpos){
	
	int *left, *right;
	int llen = mid - start + 1;
	int rlen = endpos - mid;
	left = (int *)malloc(sizeof(int)*llen);
	right = (int *)malloc(sizeof(int)*rlen);
	int i=0, j=0;	
	for(i=0; i< llen; i++){
		left[i] = A[startpos + i];
	}
	for (j=0; i<rlen; j++){
		right[j] = A[mid + i + 1];
	}
	i=0,j=0;
	int k = 0;
	for(;k < (endPos - startpos + 1);k++){
		
		if(left[i] <= right[j]){
			A[startpos + k] = left[i];
			i++;
			
		} else {
			A[startpos + k]	= right[j];
			j++;
		}
	}
}
